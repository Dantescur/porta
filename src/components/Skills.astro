---
import { Icon } from "astro-icon/components";
const skillCategories = {
  Frontend: [
    { name: "TypeScript", icon: 'devicon:typescript', site: 'https://www.typescriptlang.org' },
    { name: "Vue", icon: 'devicon:vuejs', site: 'https://vuejs.org' },
    { name: "JavaScript", icon: 'devicon:javascript', site: 'https://developer.mozilla.org/en-US/site/Web/JavaScript' },
    { name: "HTML", icon: 'devicon:html5', site: 'https://developer.mozilla.org/en-US/site/Web/HTML' },
    { name: "CSS", icon: 'devicon:css3', site: 'https://developer.mozilla.org/en-US/site/Web/CSS' },
    { name: "Tailwind", icon: 'devicon:tailwindcss', site: 'https://tailwindcss.com' },
    { name: "Astro", icon: 'devicon:astro', site: 'https://astro.build' },
  ],
  Backend: [
    { name: "Node.js", icon: 'devicon:nodejs', site: 'https://nodejs.org/en' },
    { name: "Express", icon: 'devicon:express', site: 'https://expressjs.com' },
    { name: "AdonisJS", icon: 'devicon:adonisjs', site: 'https://adonisjs.com' },
    { name: "PostgreSQL", icon: 'devicon:postgresql', site: 'https://www.postgresql.org' },
  ],
  Tools: [
    { name: "Git", icon: 'devicon:git', site: 'https://git-scm.com' },
    { name: "GitHub", icon: 'devicon:github', site: 'https://github.com' },
    { name: "Docker", icon: 'devicon:docker', site: 'https://docker.com' },
    { name: "Vite", icon: 'devicon:vitejs', site: 'https://vitejs.dev' },
    { name: "VS Code", icon: 'devicon:vscode', site: 'https://code.visualstudio.com' },
    { name: 'Neovim', icon: 'devicon:neovim', site: 'https://neovim.io'}
  ],
};
---

<section id="skills" class="py-16 sm:py-20">
  <div class="container mx-auto px-6 sm:px-8 lg:px-12">
    <h2 class="text-3xl sm:text-4xl font-bold mb-12 sm:mb-16 text-accent text-center">
      Technical Skills
    </h2>

    {Object.entries(skillCategories).map(([category, skills]) => (
      <div class="mb-16 last:mb-0">
        <h3 class="text-xl sm:text-2xl font-semibold text-text mb-8 text-center border-b border-border/20 pb-4">
          {category}
        </h3>

        <div class="grid grid-cols-2 sm:grid-cols-3 lg:grid-cols-4 xl:grid-cols-6 gap-6 sm:gap-8 justify-items-center">
          {skills.map((skill, index) => (
            <div
              class="skill-card group relative rounded-xl bg-surface p-6 border border-border/20 hover:border-accent/40 transition-all duration-300 shadow-sm hover:shadow-lg hover:-translate-y-2 w-full max-w-[140px]"
              data-skill-index={`${category}-${index}`}
              role="article"
              aria-labelledby={`skill-${category}-${index}-name`}
            >
              <a 
                href={skill.site} 
                target="_blank" 
                rel="noopener noreferrer"
                class="flex flex-col items-center justify-center gap-4 h-full text-center"
              >
                <div class="skill-icon-wrapper flex items-center justify-center">
                  <Icon
                    name={skill.icon}
                    class="w-12 h-12 sm:w-14 sm:h-14 skill-icon transition-transform duration-300 group-hover:scale-110 group-hover:rotate-6"
                    width="56"
                    height="56"
                  />
                </div>

                <div class="w-full">
                  <h4
                    id={`skill-${category}-${index}-name`}
                    class="text-sm sm:text-base font-medium font-mono text-text leading-tight"
                  >
                    {skill.name}
                  </h4>
                </div>
              </a>
            </div>
          ))}
        </div>
      </div>
    ))}
  </div>
</section>

<script>
  import { gsap } from "gsap";
  import { ScrollTrigger } from "gsap/ScrollTrigger";

  gsap.registerPlugin(ScrollTrigger);

  function initSkillAnimations() {
    const skillCards = document.querySelectorAll('.skill-card');
    
    gsap.set('.skill-card', { 
      opacity: 0, 
      y: 30,
      scale: 0.9 
    });
    
    skillCards.forEach((card, index) => {
      const icon = card.querySelector('.skill-icon');
      
      gsap.to(card, {
        opacity: 1,
        y: 0,
        scale: 1,
        duration: 0.6,
        ease: "back.out(1.7)",
        delay: index * 0.1,
        scrollTrigger: {
          trigger: card,
          start: 'top 90%',
          end: 'bottom 60%',
          toggleActions: 'play none none none',
        }
      });

      card.addEventListener('mouseenter', () => {
        gsap.to(icon, {
          scale: 1.2,
          rotation: 12,
          duration: 0.3,
          ease: "power2.out"
        });
      });
      
      card.addEventListener('mouseleave', () => {
        gsap.to(icon, {
          scale: 1,
          rotation: 0,
          duration: 0.3,
          ease: "power2.out"
        });
      });
    });
  }
  
  document.addEventListener('DOMContentLoaded', initSkillAnimations);
</script>

<style>
  .skill-card {
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    min-height: 120px;
  }

  .skill-card:hover {
    transform: translateY(-8px) scale(1.02);
    box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
  }

  .skill-icon-wrapper {
    position: relative;
  }

  .skill-icon-wrapper::after {
    content: "";
    position: absolute;
    inset: -8px;
    background: radial-gradient(
      circle,
      rgba(99, 102, 241, 0.15) 0%,
      transparent 70%
    );
    border-radius: 50%;
    opacity: 0;
    transition: opacity 0.3s ease;
    z-index: -1;
  }

  .skill-card:hover .skill-icon-wrapper::after {
    opacity: 1;
  }

  .skill-card a {
    text-decoration: none;
    color: inherit;
  }

  .skill-card a:focus {
    outline: 2px solid rgba(99, 102, 241, 0.5);
    outline-offset: 2px;
    border-radius: 0.75rem;
  }
</style>